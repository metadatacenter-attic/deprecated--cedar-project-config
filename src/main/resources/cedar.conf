{
  // Keycloak server related settings.
  // These are used when the global objects are built in neo4j
  keycloak = {
    adminUser = {
      userName = "cedar-admin",
      // UUID of "cedar-admin" user from Keycloak.
      // You can find this after logging in  to the admin console of Keycloak.
      uuid = "${env.CEDAR_ADMIN_USER_UUID}",
      // Plain text password of "cedar-admin" user
      password = "${env.CEDAR_ADMIN_USER_PASSWORD}",
    },
    clientId = "admin-cli"
  },
  // Authentication mode.
  // noAuth=false => Keycloak token or apiKey auth is used
  // noAuth=true  => No authentication is used, it should be used for tests
  authentication = {
    noAuth = false
  },
  // MongoDB settings
  mongo = {
    // Database name
    databaseName = "cedar",
    // Collection names
    collections = {
      field = "template-fields",
      element = "template-elements",
      template = "templates",
      instance = "template-instances",
      user = "users"
    }
  },
  // Neo4J settings
  neo4j = {
    // Rest API settings
    // You can find these values from the browser interface: http://localhost:7474/browser/
    // Sample values:
    //   transactionUrl = "http://localhost:7474/db/data/transaction/commit",
    //   authString = "Basic {base64(user:pass)}"
    rest = {
      transactionUrl = "${env.CEDAR_NEO4J_TRANSACTION_URL}",
      authString = "${env.CEDAR_NEO4J_AUTH_STRING}"
    }
  },
  // Elasticsearch settings
  elasticsearch = {
    cluster = "elasticsearch_cedar",
    index = "cedar-search",
    type = "resources",
    host = "127.0.0.1",
    transportPort = 9300,
    size = 1000,
    scrollKeepAlive = 60000
  },
  searchSettings = {
    searchRetrieveSettings = {
      limit = 100,
      maxAttempts = 3,
      delayAttempts = 10000
    },
    searchDefaultSettings = {
      defaultLimit = 100,
      maxAllowedLimit = 1000
    }
  },
##  resourceTypes = {
##    user = {
##      base = "https://user.${env.CEDAR_HOST}/users/"
##    }
##  },
  // Linked data settings
  // For ID generation
  linkedData = {
    base = "https://repo.${env.CEDAR_HOST}/"
  },
  // Global folder objects
  folderStructure = {
    rootFolder = {
      path = "/",
      description = "CEDAR Root Folder"
    },
    usersFolder = {
      path = "/Users",
      description = "CEDAR Users"
    },
    lostAndFoundFolder = {
      path = "/Lost+Found",
      description = "CEDAR Lost and Found resources"
    }
  },
  // Server bases
  // for inter-service REST calls
  servers = {
    template = {
      base = "https://template.${env.CEDAR_HOST}/"
    }
    folder = {
      base = "https://folder.${env.CEDAR_HOST}/",
    },
    user = {
      base = "https://user.${env.CEDAR_HOST}/",
      usersBase = "https://user.${env.CEDAR_HOST}/users/"
    }
  },
  frontend = {
    pagination = {
      defaultPageSize = 20,
      maxPageSize = 300
    }
  },
  // Default values for user profile
  // Used when generating user from blueprint
  blueprintUserProfile = {
    defaultAPIKey = {
      serviceName = "CEDAR",
      description = "Auto-generated apiKey for CEDAR"
    },
    userRoles = {
      normal = [
        "templateCreator",
        "templateInstantiator"
      ],
      admin = [
        "templateCreator",
        "templateInstantiator",
        "administrator"
      ],
      builtInAdmin = [
        "templateCreator",
        "templateInstantiator",
        "builtInSystemAdministrator"
      ]
    }
  },
  // Default values for user profile
  // Used when generating user from blueprint
  // WORKAROUND: this should be inside blueprintUserProfile, but it is not handled properly by guice.conf
  // This is why it is pulled one level up
  blueprintUIPreferences = {
    folderView = {
      sortBy = "name",
      sortDirection = "asc",
      viewMode = "grid"
    },
    populateATemplate = {
      sortBy = "name",
      sortDirection = "asc",
      viewMode = "grid",
      opened = true
    }
  }
}